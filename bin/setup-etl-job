#! /usr/bin/env bash

set -e

################################################################
# Runs Scala utility to generate the directory structure, job
# properties file, and JSON-based table schema file for one DB
# table that you intend to snapshot using EsurientEtlTask.
# Output files produces here will be written to the base dir
# specified in the job args on HDFS.
#
# Once the properties and schema files are generated, they will
# only need to be regenerated when the underlying DB table schema
# is altered, or the nature of the snapshot job needs to change.
# You can also alter the existing files by hand when convenient.
#
# USAGE:
# <code>
# bin/setup-etljob \
#   --dbConfig /hdfs/path/to/db/config/file.json \
#   --outputPath /hdfs/path/to/table/dir \
#   --database db_name \
#   --dbType mysql|postgres \
#   --table table_name \
#   --dbPass password \
#   --metricsHostPort host:port \
#   --updateCol col_name \
#   --dedupCol col_name \
#   --window updateWindowSecs \
#   --compression gzip
# </code>
#
# Where 'VERSION' is whatever your current Esurient build produces.
#
# Note: The <code>--metricsHostPort</code>, <code>--compression</code>, and <code>--window</code> args are optional.
#
#       MANY CLI ARGS are required here to bootstrap a new snapshot job.
#       It is recommended that you check out the full arg list at:
#
#  src/main/scala/com/ereisman/esurient/etl/EsurientEtlMetadataManager.scala



# Assumes we're executing from the bin/ dir. finds repo root dir
pushd "$(dirname $0)/.."
BASEDIR=`pwd -P`
popd

# Default if the user didn't provide a path to the fat jar
JARPATH=`ls $BASEDIR/target/esurient-*-jar-with-dependencies.jar`

# See src/main/scala/com/ereisman/esurient/db/EsurientEtlMetadataManager.scala
# for a list of expected CLI args. Those args are how you customize the job
# properties for the acual table snapshot ETL job they will configure.
java -cp `hadoop classpath`:$JARPATH com.ereisman.esurient.examples.EsurientEtlSetupScript $@
